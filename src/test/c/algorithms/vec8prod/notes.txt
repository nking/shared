measurements taken using computer w/
    dual core processor using CISC instructions.
    level 3 Cache: 3 MB shared 
    Cache Level 1:  32k for each core
    Cache Level 2:  256k for each core
    max memory bus: 26 GB/sec
    processor : 1.6 GHz

    at each cycle, memory can transfer at most:
        max memory bus (26 GB/sec) * (sec/1.6G cycles) = 16 Bytes / cycle
          = 128 bits / cycle
        and max memory bus rate is possibly not the mean rate.

    TODO: gather details from Intel if they exist for roofline analysis
       for this architecture
       https://docs.nersc.gov/tools/performance/roofline/


summary timing stats:
    1<<16 elements:
        ISPC time: 80 cycles
        serial per element total time: 340 cycles.

for the vec8prod task;
    ispc can perform better (faster runtime exec) than serial execution.
    6 times better for test data of length 1<<16.

    the simd and multithread versions do not use
    thread pools. the execution runtimes are dominated by context switches,
    and so are not better than a serial, element by element execution of
    the vector product.
    the serial SIMD w/o threads is also not faster than the serial execution.

    Note: if it were beneficial for the algorithm, and you had a multi-core 
    system with multi-thread cores and the cores were superscalar,
    you could run more than 1 instruction simultanesouly at each clock cycle
    (instruction level parallelism).
    The computer used for these measurements in these notes was an Integrated
    Circuit (IC) managed system and did not have superscalar cores.


The vec8prod algorithm is highly parallelizable, so one can 
   calc the speedup as time 1 processor / time p processors 
   and estimate communication costs as latency 
   including context switching if threads are used 
   and amount of memory needed and memory bandwidth and
   machine network bandwidth
   for the parallel model.

* the vec8prod could be used in convolution.
  (multiplication w/ a kernel then sum) using
  vec8prod then the scan algorithm.

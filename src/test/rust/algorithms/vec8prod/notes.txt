measurements taken using computer w/
    level 3 Cache: 3 MB shared (not used here)
    Cache Level 1:  32k for each core
    Cache Level 2:  256k for each core
    max memory bus: 26 GB/sec
    processor : 1.6 GHz

    at each cycle, memory can transfer at most:
        max memory bus (26 GB/sec) * (sec/1.6G cycles) = 16 Bytes / cycle
          = 128 bits / cycle
        and max memory bus rate is possibly not the mean rate.

using timing logs created with the shell scripts.

NOTE: the times are using rust's std::time modules
SystemTime and Duration, to get the elapsed time dur.as_nanos()
but the numbers look like they must be microseconds
not nanoseconds.

The times, if microseconds, are a factor of ~ 7 larger than the
comparable code run in c programs in
src/test/c/algorithms/vec8prod when cycles are converted to nanosec
then microsec using the processor speed.

TODO: add arith intensity notes

vec8prod algorithm w/ 65536 elements in input array:

    serial per element:
        tot: 847500

    intrinsics:
        tot: 629612500
        thr: 1000
        d load: 1000

    simd:
        tot: 546857500
        thr: 0
        d load: 0

    no vectorization, but multithreaded:
        tot: 532245500
        thr: 0

----- 

stats for the higher arith intensity method,
with 250000 elements in input array:

    serial per element:
      tot: 113899500  

   serial intrinsics:
      tot:  92640500
      thr:  15176000
      d: 0

   2thread instrinsics:
      tot:  95751500
      thr:  9995000
      d: 0
